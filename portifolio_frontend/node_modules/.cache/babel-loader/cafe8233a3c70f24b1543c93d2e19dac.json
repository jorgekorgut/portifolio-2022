{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst parseJSON = resp => resp.json ? resp.json() : resp; //export const baseURL = \"https://portifolio.korgut.fr\";\n\n\nexport const baseURL = \"http://localhost:1338\";\n\nconst checkStatus = resp => {\n  if (resp.status >= 200 && resp.status < 300) {\n    return resp;\n  }\n\n  return parseJSON(resp).then(resp => {\n    throw resp;\n  });\n};\n\nexport const useFetch = (url, globalData) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  console.log(baseURL + \"/\" + url);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        if (globalData === undefined || globalData === null) {\n          let res = await fetch(baseURL + \"/\" + url, {\n            mode: 'cors'\n          });\n          const json = await res.json();\n          setData(json);\n        } else {\n          setData(globalData);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return [loading, error, data];\n};\n\n_s(useFetch, \"1c5sn5cibqzG0DtiKAhZ3Owka2k=\");","map":{"version":3,"names":["useState","useEffect","parseJSON","resp","json","baseURL","checkStatus","status","then","useFetch","url","globalData","data","setData","error","setError","loading","setLoading","console","log","fetchData","undefined","res","fetch","mode"],"sources":["/home/toby2/Desktop/Portifolio/portifolio_frontend/src/assets/js/communication.js"],"sourcesContent":["import { useState , useEffect } from 'react';\n\nconst parseJSON = (resp) => (resp.json ? resp.json() : resp);\n\n//export const baseURL = \"https://portifolio.korgut.fr\";\nexport const baseURL = \"http://localhost:1338\";\n\nconst checkStatus = (resp) => {\n  if (resp.status >= 200 && resp.status < 300) {\n    return resp;\n  }\n\n  return parseJSON(resp).then(resp => {\n    throw resp;\n  });\n};\n\nexport const useFetch = (url,globalData) => {\n\tconst [data, \tsetData] = useState(null);\n\tconst [error, setError] = useState(null);\n\tconst [loading, setLoading] = useState(true);\n\tconsole.log(baseURL +\"/\"+ url);\n\tuseEffect(()=>{\n\t\tconst fetchData = async () => {\n\t\t\tsetLoading(true);\n\t\t\ttry{\n\t\t\t\tif(globalData === undefined || globalData === null){\n\t\t\t\t\tlet res = await fetch(baseURL +\"/\"+ url, {mode: 'cors', });\n\t\t\t\t\tconst json = await res.json();\n\t\t\t\t\tsetData(json);\n\t\t\t\t}else{\n\t\t\t\t\tsetData(globalData);\n\t\t\t\t}\n\t\t\t\tsetLoading(false);\n\t\t\t} catch (error){\n\t\t\t\tsetError(error);\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t},[url])\n\n\treturn [loading, error, data];\n}\n\n"],"mappings":";;AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAqC,OAArC;;AAEA,MAAMC,SAAS,GAAIC,IAAD,IAAWA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACC,IAAL,EAAZ,GAA0BD,IAAvD,C,CAEA;;;AACA,OAAO,MAAME,OAAO,GAAG,uBAAhB;;AAEP,MAAMC,WAAW,GAAIH,IAAD,IAAU;EAC5B,IAAIA,IAAI,CAACI,MAAL,IAAe,GAAf,IAAsBJ,IAAI,CAACI,MAAL,GAAc,GAAxC,EAA6C;IAC3C,OAAOJ,IAAP;EACD;;EAED,OAAOD,SAAS,CAACC,IAAD,CAAT,CAAgBK,IAAhB,CAAqBL,IAAI,IAAI;IAClC,MAAMA,IAAN;EACD,CAFM,CAAP;AAGD,CARD;;AAUA,OAAO,MAAMM,QAAQ,GAAG,CAACC,GAAD,EAAKC,UAAL,KAAoB;EAAA;;EAC3C,MAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBb,QAAQ,CAAC,IAAD,CAAjC;EACA,MAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;EACAkB,OAAO,CAACC,GAAR,CAAYd,OAAO,GAAE,GAAT,GAAcK,GAA1B;EACAT,SAAS,CAAC,MAAI;IACb,MAAMmB,SAAS,GAAG,YAAY;MAC7BH,UAAU,CAAC,IAAD,CAAV;;MACA,IAAG;QACF,IAAGN,UAAU,KAAKU,SAAf,IAA4BV,UAAU,KAAK,IAA9C,EAAmD;UAClD,IAAIW,GAAG,GAAG,MAAMC,KAAK,CAAClB,OAAO,GAAE,GAAT,GAAcK,GAAf,EAAoB;YAACc,IAAI,EAAE;UAAP,CAApB,CAArB;UACA,MAAMpB,IAAI,GAAG,MAAMkB,GAAG,CAAClB,IAAJ,EAAnB;UACAS,OAAO,CAACT,IAAD,CAAP;QACA,CAJD,MAIK;UACJS,OAAO,CAACF,UAAD,CAAP;QACA;;QACDM,UAAU,CAAC,KAAD,CAAV;MACA,CATD,CASE,OAAOH,KAAP,EAAa;QACdC,QAAQ,CAACD,KAAD,CAAR;QACAG,UAAU,CAAC,KAAD,CAAV;MACA;IACD,CAfD;;IAgBAG,SAAS;EACT,CAlBQ,EAkBP,CAACV,GAAD,CAlBO,CAAT;EAoBA,OAAO,CAACM,OAAD,EAAUF,KAAV,EAAiBF,IAAjB,CAAP;AACA,CA1BM;;GAAMH,Q"},"metadata":{},"sourceType":"module"}