{"ast":null,"code":"var _jsxFileName = \"/home/toby2/Desktop/Portifolio/portifolio_frontend/src/pages_js/experience.js\";\nimport { useState, useEffect } from 'react';\nimport { Navigation } from '../index.js';\nimport { GetData } from '../assets/js/communication.js';\nimport '../pages_css/experience.css';\nimport '../assets/css/components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction filterMapByYear(map, y) {\n  return map.filter(_ref => {\n    let {\n      Year\n    } = _ref;\n    return Year === y;\n  });\n}\n\nfunction findEveryYear(map) {\n  let everyYear = [];\n\n  for (let element in map) {\n    console.log(element);\n\n    if (!everyYear.contains(element.attributes.Year)) {\n      everyYear.push(element.attributes.Year);\n    }\n  }\n\n  return everyYear;\n}\n\nexport function Experience(props) {\n  let error;\n  let experiences;\n  [experiences, error] = GetData(\"api/experiences?populate=*\");\n  console.log(experiences);\n  let everyYear = findEveryYear(experiences);\n  console.log(everyYear);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navigation, {\n      highlight: \"experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useState","useEffect","Navigation","GetData","filterMapByYear","map","y","filter","Year","findEveryYear","everyYear","element","console","log","contains","attributes","push","Experience","props","error","experiences"],"sources":["/home/toby2/Desktop/Portifolio/portifolio_frontend/src/pages_js/experience.js"],"sourcesContent":["import { useState , useEffect } from 'react';\n\nimport {Navigation} from '../index.js';\n\nimport {GetData} from '../assets/js/communication.js'\n\nimport '../pages_css/experience.css'\nimport '../assets/css/components.css'\n\nfunction filterMapByYear(map, y){\n\treturn map.filter(({Year})=> Year===y);\n}\n\nfunction findEveryYear(map){\n\tlet everyYear = [];\n\tfor(let element in map){\n\t\tconsole.log(element);\n\t\tif(!everyYear.contains(element.attributes.Year)){\n\t\t\teveryYear.push(element.attributes.Year);\n\t\t}\n\t}\n\treturn everyYear;\n}\n\nexport function Experience(props){\n\n\tlet error;\n\tlet experiences;\n\t[experiences, error] = GetData(\"api/experiences?populate=*\")\n\tconsole.log(experiences);\n\n\tlet everyYear = findEveryYear(experiences);\n\tconsole.log(everyYear);\n\n\treturn (<>\n\t\t\t<Navigation highlight='experience'/>\n\t       </>)\n}\n"],"mappings":";AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAqC,OAArC;AAEA,SAAQC,UAAR,QAAyB,aAAzB;AAEA,SAAQC,OAAR,QAAsB,+BAAtB;AAEA,OAAO,6BAAP;AACA,OAAO,8BAAP;;;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,CAA9B,EAAgC;EAC/B,OAAOD,GAAG,CAACE,MAAJ,CAAW;IAAA,IAAC;MAACC;IAAD,CAAD;IAAA,OAAWA,IAAI,KAAGF,CAAlB;EAAA,CAAX,CAAP;AACA;;AAED,SAASG,aAAT,CAAuBJ,GAAvB,EAA2B;EAC1B,IAAIK,SAAS,GAAG,EAAhB;;EACA,KAAI,IAAIC,OAAR,IAAmBN,GAAnB,EAAuB;IACtBO,OAAO,CAACC,GAAR,CAAYF,OAAZ;;IACA,IAAG,CAACD,SAAS,CAACI,QAAV,CAAmBH,OAAO,CAACI,UAAR,CAAmBP,IAAtC,CAAJ,EAAgD;MAC/CE,SAAS,CAACM,IAAV,CAAeL,OAAO,CAACI,UAAR,CAAmBP,IAAlC;IACA;EACD;;EACD,OAAOE,SAAP;AACA;;AAED,OAAO,SAASO,UAAT,CAAoBC,KAApB,EAA0B;EAEhC,IAAIC,KAAJ;EACA,IAAIC,WAAJ;EACA,CAACA,WAAD,EAAcD,KAAd,IAAuBhB,OAAO,CAAC,4BAAD,CAA9B;EACAS,OAAO,CAACC,GAAR,CAAYO,WAAZ;EAEA,IAAIV,SAAS,GAAGD,aAAa,CAACW,WAAD,CAA7B;EACAR,OAAO,CAACC,GAAR,CAAYH,SAAZ;EAEA,oBAAQ;IAAA,uBACN,QAAC,UAAD;MAAY,SAAS,EAAC;IAAtB;MAAA;MAAA;MAAA;IAAA;EADM,iBAAR;AAGA;KAbeO,U"},"metadata":{},"sourceType":"module"}