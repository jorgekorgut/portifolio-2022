{"ast":null,"code":"/**\n * AjaxClient2\n * ajax2 with fetch api\n * MIT License\n *\n * @author Tom Misawa (riversun.org@gmail.com,https://github.com/riversun)\n */\nexport class AjaxClient2 {\n  constructor(opt) {\n    this.opt = opt || {};\n  }\n\n  getAsync(options) {\n    options.type = 'get';\n    this.ajax(options);\n  }\n\n  postAsync(options) {\n    options.type = 'post';\n    this.ajax(options);\n  }\n\n  async get(options) {\n    options.type = 'get';\n\n    if (options.contentType === 'application/json') {\n      if (this.typeOf(options.data) === 'String') {} else {\n        const obj = options.data;\n        options.data = JSON.stringify(obj);\n      }\n    }\n\n    return new Promise(resolve => {\n      options.success = (data, response) => {\n        resolve({\n          success: true,\n          data: data,\n          response\n        });\n      };\n\n      options.error = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response\n        });\n      };\n\n      options.timeout = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response\n        });\n      };\n\n      this.ajax(options);\n    });\n  }\n\n  async post(options) {\n    options.type = 'post';\n\n    if (options.contentType === 'application/json') {\n      if (this.typeOf(options.data) === 'String') {} else {\n        const obj = options.data;\n        options.data = JSON.stringify(obj);\n      }\n    }\n\n    return new Promise(resolve => {\n      options.success = (data, response) => {\n        resolve({\n          success: true,\n          data: data,\n          response\n        });\n      };\n\n      options.error = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response\n        });\n      };\n\n      options.timeout = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response\n        });\n      };\n\n      this.ajax(options);\n    });\n  }\n\n  ajax(options) {\n    const url = this._createUrl(options);\n\n    const method = options.type;\n    const dataType = options.dataType;\n    const data = options.data;\n    const headers = options.headers;\n    const contentType = options.contentType;\n    let postBody = null;\n\n    if (!url) {\n      throw Error('Please specify url.');\n    }\n\n    if (method && method.toLowerCase() === 'post') {\n      postBody = data; //JSON.stringify(data);\n\n      if (dataType === 'jsonp') {\n        //POST and jsonp specified\n        throw new Error(`type:'POST' and 'dataType:jsonp' are specified together.\n                'POST' and 'jsonp' can not be specified together`);\n      }\n    }\n\n    if (headers && dataType === 'jsonp') {\n      //http-headers and jsonp specified\n      throw new Error(`'headers' and 'dataType:jsonp' can not be specified together.\n           Http headers cannot be sent when using jsonp.`);\n    }\n\n    const reqParam = {\n      url: url,\n      method: method,\n      body: postBody,\n      contentType: contentType\n    };\n\n    if (headers) {\n      reqParam.headers = headers;\n    }\n\n    if (dataType === 'json' || dataType === 'text') {\n      const asyncResult = this._handleData(reqParam, dataType, options);\n\n      return asyncResult;\n    } else if (dataType === 'jsonp') {\n      const asyncResult = this._handleJsonp(reqParam, options);\n\n      return asyncResult;\n    } else {\n      throw new Error(`Please check dataType:${dataType} dataType must be 'json' or 'jsonp'`);\n    }\n  }\n\n  _getFetchParam(reqParam, options) {\n    const method = reqParam.method.toUpperCase();\n    const fetchParam = {\n      method: method,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {//'Accept': 'application/json',\n        //'Content-Type': 'application/json'\n      } //credentials:null,// 'include',\n      //referrer: 'no-referrer',\n\n    };\n\n    if (reqParam.contentType) {\n      fetchParam.headers['Content-Type'] = reqParam.contentType;\n    } else {\n      if (method === 'POST' || method === 'PUT') {\n        throw Error('Please specify contentType.');\n      }\n    }\n\n    if (options.xhrFields) {\n      const {\n        xhrFields\n      } = options;\n\n      if (xhrFields.withCredentials === true) {\n        fetchParam.credentials = 'include';\n      }\n    } //populate credentials\n\n\n    if (reqParam.credentials) {\n      fetchParam.credentials = reqParam.credentials;\n    } //populate headers\n\n\n    if (reqParam.headers) {\n      for (const key in reqParam.headers) {\n        const value = reqParam.headers[key];\n        fetchParam.headers[key] = value;\n      }\n    } //populate body\n\n\n    if (reqParam.body) {\n      if (reqParam.contentType.startsWith('application/x-www-form-urlencoded')) {\n        const fnEncodeForm = formData => {\n          const params = [];\n\n          for (const name in formData) {\n            const value = formData[name];\n            const param = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n            params.push(param);\n          }\n\n          return params.join('&').replace(/%20/g, '+'); // encoded space(=%20) to '+'\n        };\n\n        const formData = reqParam.body;\n        const paramsFromFormData = fnEncodeForm(formData);\n        fetchParam.body = paramsFromFormData;\n      } else {\n        fetchParam.body = reqParam.body;\n      }\n    }\n\n    return fetchParam;\n  }\n\n  _handleData(reqParam, dataType, options) {\n    const self = this;\n    const asyncResult = new AjaxResult();\n\n    const fetchParam = this._getFetchParam(reqParam, options);\n\n    const fnFetch = self.opt.fetch || fetch;\n    const fetchPromise = fnFetch(reqParam.url, fetchParam);\n\n    const fnTimeout = (promise, options) => {\n      return new Promise((resolve, reject) => {\n        //(1)タイムアウトのsetTimeと (2) fetchPromiseを同時実行\n        if (options && options.timeoutMillis) {\n          // (1)\n          setTimeout(() => {\n            reject({\n              data: null,\n              cause: `timeout,${options.timeoutMillis}ms elapsed`,\n              response: null\n            });\n          }, options.timeoutMillis);\n        } // (2)\n\n\n        promise.then(response => {\n          if (!response.ok) {\n            // - !response.okの場合(status が 200-299 の範囲外の場合)\n            if (dataType === 'json') {\n              response.json().then(jsonData => {\n                reject({\n                  data: jsonData,\n                  cause: `server error,statusCode:${response.status}`,\n                  response\n                });\n              }).catch(err => {\n                // json parse error の場合は text　でとりなおす\n                response.text().then(textData => {\n                  reject({\n                    data: textData,\n                    cause: `server error,statusCode:${response.status}`,\n                    response\n                  });\n                }).catch(err => {\n                  reject({\n                    data: null,\n                    cause: `client error,${err}`,\n                    response\n                  });\n                }); // reject({ data: null, cause: `client error,${err}`, response });\n              });\n            } else if (dataType === 'text') {\n              response.text().then(textData => {\n                reject({\n                  data: textData,\n                  cause: `server error,statusCode:${response.status}`,\n                  response\n                });\n              }).catch(err => {\n                reject({\n                  data: null,\n                  cause: `client error,${err}`,\n                  response\n                });\n              });\n            }\n          } else {\n            // - response.ok の場合(status が 200-299 の範囲内の場合)\n            if (dataType === 'json') {\n              response.json().then(jsonData => {\n                resolve({\n                  data: jsonData,\n                  response\n                });\n              }).catch(err => {\n                reject({\n                  data: null,\n                  cause: `client error,${err}`,\n                  response\n                });\n              });\n            } else if (dataType === 'text') {\n              response.text().then(textData => {\n                //return Promise.resolve({ data: jsonData, response });\n                resolve({\n                  data: textData,\n                  response\n                }); // return {data:jsonData,response}; // is also ok\n              }).catch(err => {\n                reject({\n                  data: null,\n                  cause: `client error,${err}`,\n                  response\n                });\n              });\n            }\n          }\n        }).catch(err => {\n          console.log(\"エラー\", err);\n          reject({\n            data: null,\n            cause: `network error`,\n            response: null,\n            err\n          });\n        });\n      });\n    };\n\n    fnTimeout(fetchPromise, options).then(result => {\n      // - resolve を受け取った\n      //asyncResult._success(result.data, result.response);\n      asyncResult._success(result);\n\n      if (options && options.success) {\n        options.success(result.data, result.response); //data.data);\n      }\n    }).catch(errResult => {\n      // - reject を受け取る\n      //const errorObj = errResult;\n      //asyncResult._fail(errResult.data, errResult.response,errResult.cause,errResult.err);// todo なにこれ\n      asyncResult._fail(errResult);\n\n      if (errResult.cause === 'timeout') {\n        if (options && options.timeout) {\n          options.timeout(errResult.data, errResult.response, errResult.cause, errResult.err);\n        }\n      } else {\n        if (options && options.error) {\n          //options.error(errResult, errResult.response);\n          options.error(errResult.data, errResult.response, errResult.cause, errResult.err);\n        }\n      }\n    });\n    return asyncResult;\n  }\n\n  _handleJsonp(reqParam, options) {\n    const asyncResult = new AjaxResult();\n    const scriptEle = document.createElement('script');\n    const callbackFuncName = `ajaxclient2_${this._createUUID()}`;\n    let src = reqParam.url;\n\n    if (src.indexOf('?') >= 0) {\n      src += `&callback=${callbackFuncName}`;\n    } else {\n      src += `?callback=${callbackFuncName}`;\n    }\n\n    scriptEle.src = src;\n    scriptEle.addEventListener('error', errorObj => {\n      asyncResult._fail(errorObj);\n\n      if (options && options.error) {\n        options.error(errorObj, null);\n      }\n    }); //global object\n\n    window[callbackFuncName] = res => {\n      delete window[callbackFuncName];\n\n      asyncResult._success({\n        data: res,\n        response: null\n      });\n\n      if (options && options.success) {\n        options.success(res, null);\n      }\n    };\n\n    const parentEle = document.getElementsByTagName('head') ? document.getElementsByTagName('head')[0] : document.body;\n    parentEle.appendChild(scriptEle);\n    return asyncResult;\n  }\n\n  _createUrl(options) {\n    if (options.type && options.type.toLowerCase() === 'post') {\n      //POST\n      return options.url;\n    } else if (options.type && options.type.toLowerCase() === 'get') {\n      //GET\n      let url = options.url;\n\n      if (options.data) {\n        const paramData = JSON.parse(options.data);\n        url = url + '?';\n\n        for (let paramKey of Object.keys(paramData)) {\n          const paramVal = paramData[paramKey];\n          url += `${paramKey}=${paramVal}&`;\n        }\n\n        url = url.substring(0, url.length - 1);\n      }\n\n      return url;\n    } else {\n      throw Error(`Invalid type ${options.type} is not supported`);\n    }\n  }\n\n  _createUUID() {\n    const dateTime = new Date().getTime();\n    const uuid = 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = (dateTime + Math.random() * 16) % 16 | 0;\n      return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n  }\n\n  typeOf(obj) {\n    return Object.prototype.toString.call(obj).slice(8, -1);\n  }\n\n}\n\nclass AjaxResult {\n  constructor() {\n    this._successFunc = () => {};\n\n    this._failFunc = () => {};\n  }\n\n  done(callbackFunc) {\n    this._successFunc = callbackFunc;\n    return this;\n  }\n\n  fail(callbackFunc) {\n    this._failFunc = callbackFunc;\n    return this;\n  }\n\n  _success(successResult) {\n    if (this._successFunc) {\n      this._successFunc(successResult.data, successResult.response);\n    }\n  }\n\n  _fail(errResult) {\n    if (this._failFunc) {\n      this._failFunc(errResult.data, errResult.response, errResult.cause, errResult.err);\n    }\n  }\n\n}","map":{"version":3,"names":["AjaxClient2","constructor","opt","getAsync","options","type","ajax","postAsync","get","contentType","typeOf","data","obj","JSON","stringify","Promise","resolve","success","response","error","cause","err","timeout","post","url","_createUrl","method","dataType","headers","postBody","Error","toLowerCase","reqParam","body","asyncResult","_handleData","_handleJsonp","_getFetchParam","toUpperCase","fetchParam","mode","cache","xhrFields","withCredentials","credentials","key","value","startsWith","fnEncodeForm","formData","params","name","param","encodeURIComponent","push","join","replace","paramsFromFormData","self","AjaxResult","fnFetch","fetch","fetchPromise","fnTimeout","promise","reject","timeoutMillis","setTimeout","then","ok","json","jsonData","status","catch","text","textData","console","log","result","_success","errResult","_fail","scriptEle","document","createElement","callbackFuncName","_createUUID","src","indexOf","addEventListener","errorObj","window","res","parentEle","getElementsByTagName","appendChild","paramData","parse","paramKey","Object","keys","paramVal","substring","length","dateTime","Date","getTime","uuid","c","r","Math","random","toString","prototype","call","slice","_successFunc","_failFunc","done","callbackFunc","fail","successResult"],"sources":["/home/toby2/Desktop/Portifolio/portifolio_frontend/node_modules/ajax-client/src/AjaxClient2.js"],"sourcesContent":["\n/**\n * AjaxClient2\n * ajax2 with fetch api\n * MIT License\n *\n * @author Tom Misawa (riversun.org@gmail.com,https://github.com/riversun)\n */\nexport class AjaxClient2 {\n\n  constructor(opt) {\n    this.opt = opt || {};\n  }\n\n  getAsync(options) {\n\n    options.type = 'get';\n    this.ajax(options);\n  }\n\n  postAsync(options) {\n    options.type = 'post';\n    this.ajax(options);\n  }\n\n  async get(options) {\n    options.type = 'get';\n\n    if (options.contentType === 'application/json') {\n      if (this.typeOf(options.data) === 'String') {\n\n      } else {\n        const obj = options.data;\n        options.data = JSON.stringify(obj);\n      }\n    }\n\n    return new Promise((resolve) => {\n      options.success = (data, response) => {\n        resolve({ success: true, data: data, response });\n      };\n      options.error = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      options.timeout = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      this.ajax(options);\n    });\n\n  }\n\n  async post(options) {\n    options.type = 'post';\n\n    if (options.contentType === 'application/json') {\n      if (this.typeOf(options.data) === 'String') {\n\n      } else {\n        const obj = options.data;\n        options.data = JSON.stringify(obj);\n      }\n    }\n\n    return new Promise((resolve) => {\n      options.success = (data, response) => {\n        resolve({\n          success: true,\n          data: data,\n          response,\n        });\n      };\n      options.error = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      options.timeout = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      this.ajax(options);\n    });\n\n\n  }\n\n  ajax(options) {\n\n    const url = this._createUrl(options);\n    const method = options.type;\n    const dataType = options.dataType;\n    const data = options.data;\n    const headers = options.headers;\n    const contentType = options.contentType;\n\n\n    let postBody = null;\n\n    if (!url) {\n      throw Error('Please specify url.');\n    }\n    if (method && method.toLowerCase() === 'post') {\n\n      postBody = data;//JSON.stringify(data);\n\n      if (dataType === 'jsonp') {\n        //POST and jsonp specified\n        throw new Error(`type:'POST' and 'dataType:jsonp' are specified together.\n                'POST' and 'jsonp' can not be specified together`);\n      }\n    }\n\n    if (headers && dataType === 'jsonp') {\n      //http-headers and jsonp specified\n      throw new Error(`'headers' and 'dataType:jsonp' can not be specified together.\n           Http headers cannot be sent when using jsonp.`);\n    }\n\n    const reqParam = {\n      url: url,\n      method: method,\n      body: postBody,\n      contentType: contentType,\n    };\n\n    if (headers) {\n      reqParam.headers = headers;\n    }\n\n\n    if (dataType === 'json' || dataType === 'text') {\n      const asyncResult = this._handleData(reqParam, dataType, options);\n      return asyncResult;\n    } else if (dataType === 'jsonp') {\n      const asyncResult = this._handleJsonp(reqParam, options);\n      return asyncResult;\n    } else {\n      throw new Error(`Please check dataType:${dataType} dataType must be 'json' or 'jsonp'`);\n    }\n  }\n\n  _getFetchParam(reqParam, options) {\n\n\n    const method = reqParam.method.toUpperCase();\n    const fetchParam = {\n      method: method,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        //'Accept': 'application/json',\n        //'Content-Type': 'application/json'\n      }\n      //credentials:null,// 'include',\n      //referrer: 'no-referrer',\n    };\n\n    if (reqParam.contentType) {\n      fetchParam.headers['Content-Type'] = reqParam.contentType;\n\n    } else {\n      if (method === 'POST' || method === 'PUT') {\n        throw Error('Please specify contentType.');\n      }\n    }\n\n    if (options.xhrFields) {\n      const { xhrFields } = options;\n      if (xhrFields.withCredentials === true) {\n        fetchParam.credentials = 'include';\n      }\n    }\n    //populate credentials\n    if (reqParam.credentials) {\n      fetchParam.credentials = reqParam.credentials;\n    }\n\n    //populate headers\n    if (reqParam.headers) {\n      for (const key in reqParam.headers) {\n        const value = reqParam.headers[key];\n        fetchParam.headers[key] = value;\n      }\n    }\n\n    //populate body\n    if (reqParam.body) {\n\n      if (reqParam.contentType.startsWith('application/x-www-form-urlencoded')) {\n\n        const fnEncodeForm = (formData) => {\n          const params = [];\n          for (const name in formData) {\n            const value = formData[name];\n            const param = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n            params.push(param);\n          }\n          return params.join('&').replace(/%20/g, '+');// encoded space(=%20) to '+'\n        };\n\n        const formData = reqParam.body;\n        const paramsFromFormData = fnEncodeForm(formData);\n        fetchParam.body = paramsFromFormData;\n      } else {\n        fetchParam.body = reqParam.body;\n      }\n\n\n    }\n    return fetchParam;\n  }\n\n  _handleData(reqParam, dataType, options) {\n    const self = this;\n    const asyncResult = new AjaxResult();\n    const fetchParam = this._getFetchParam(reqParam, options);\n\n    const fnFetch = self.opt.fetch || fetch;\n\n    const fetchPromise = fnFetch(reqParam.url, fetchParam);\n\n    const fnTimeout = (promise, options) => {\n\n      return new Promise((resolve, reject) => {\n\n        //(1)タイムアウトのsetTimeと (2) fetchPromiseを同時実行\n        if (options && options.timeoutMillis) {\n          // (1)\n          setTimeout(() => {\n            reject({ data: null, cause: `timeout,${options.timeoutMillis}ms elapsed`, response: null });\n          }, options.timeoutMillis);\n        }\n\n        // (2)\n        promise.then(\n          (response) => {\n            if (!response.ok) {\n              // - !response.okの場合(status が 200-299 の範囲外の場合)\n              if (dataType === 'json') {\n                response.json()\n                  .then((jsonData) => {\n                    reject({ data: jsonData, cause: `server error,statusCode:${response.status}`, response });\n                  })\n                  .catch((err) => {\n                    // json parse error の場合は text　でとりなおす\n                    response.text()\n                      .then((textData) => {\n                        reject({ data: textData, cause: `server error,statusCode:${response.status}`, response });\n                      })\n                      .catch((err) => {\n                        reject({ data: null, cause: `client error,${err}`, response });\n                      });\n                    // reject({ data: null, cause: `client error,${err}`, response });\n                  });\n\n              } else if (dataType === 'text') {\n                response.text()\n                  .then((textData) => {\n                    reject({ data: textData, cause: `server error,statusCode:${response.status}`, response });\n                  })\n                  .catch((err) => {\n                    reject({ data: null, cause: `client error,${err}`, response });\n                  });\n              }\n\n            } else {\n              // - response.ok の場合(status が 200-299 の範囲内の場合)\n              if (dataType === 'json') {\n                response.json()\n                  .then((jsonData) => {\n                    resolve({ data: jsonData, response });\n                  })\n                  .catch((err) => {\n                    reject({ data: null, cause: `client error,${err}`, response });\n                  });\n\n\n              } else if (dataType === 'text') {\n                response.text()\n                  .then((textData) => {\n                    //return Promise.resolve({ data: jsonData, response });\n                    resolve({ data: textData, response });\n                    // return {data:jsonData,response}; // is also ok\n                  })\n                  .catch((err) => {\n                    reject({ data: null, cause: `client error,${err}`, response });\n                  });\n              }\n            }\n          })\n          .catch((err) => {\n            console.log(\"エラー\", err)\n            reject({ data: null, cause: `network error`, response: null, err });\n          });\n      });\n    };\n\n    fnTimeout(fetchPromise, options)\n      .then(\n        (result) => {\n          // - resolve を受け取った\n          //asyncResult._success(result.data, result.response);\n          asyncResult._success(result);\n          if (options && options.success) {\n            options.success(result.data, result.response);//data.data);\n          }\n        })\n      .catch(errResult => {\n\n        // - reject を受け取る\n        //const errorObj = errResult;\n        //asyncResult._fail(errResult.data, errResult.response,errResult.cause,errResult.err);// todo なにこれ\n        asyncResult._fail(errResult);\n\n        if (errResult.cause === 'timeout') {\n\n          if (options && options.timeout) {\n            options.timeout(errResult.data, errResult.response, errResult.cause, errResult.err);\n          }\n        } else {\n          if (options && options.error) {\n            //options.error(errResult, errResult.response);\n            options.error(errResult.data, errResult.response, errResult.cause, errResult.err);\n\n          }\n        }\n      });\n\n\n    return asyncResult;\n\n  }\n\n  _handleJsonp(reqParam, options) {\n\n    const asyncResult = new AjaxResult();\n    const scriptEle = document.createElement('script');\n    const callbackFuncName = `ajaxclient2_${this._createUUID()}`;\n\n    let src = reqParam.url;\n    if (src.indexOf('?') >= 0) {\n      src += `&callback=${callbackFuncName}`;\n    } else {\n      src += `?callback=${callbackFuncName}`;\n    }\n    scriptEle.src = src;\n    scriptEle.addEventListener('error', (errorObj) => {\n      asyncResult._fail(errorObj);\n      if (options && options.error) {\n        options.error(errorObj, null);\n      }\n    });\n\n    //global object\n    window[callbackFuncName] = (res) => {\n      delete window[callbackFuncName];\n\n      asyncResult._success({ data: res, response: null });\n      if (options && options.success) {\n\n        options.success(res, null);\n      }\n    };\n\n    const parentEle = document.getElementsByTagName('head') ? document.getElementsByTagName('head')[0] : document.body;\n    parentEle.appendChild(scriptEle);\n\n    return asyncResult;\n\n  }\n\n  _createUrl(options) {\n\n    if (options.type && options.type.toLowerCase() === 'post') {\n      //POST\n      return options.url;\n    } else if (options.type && options.type.toLowerCase() === 'get') {\n      //GET\n      let url = options.url;\n      if (options.data) {\n\n        const paramData = JSON.parse(options.data);\n\n        url = url + '?';\n        for (let paramKey of Object.keys(paramData)) {\n          const paramVal = paramData[paramKey];\n          url += `${paramKey}=${paramVal}&`;\n        }\n        url = url.substring(0, url.length - 1);\n      }\n      return url;\n    } else {\n      throw Error(`Invalid type ${options.type} is not supported`);\n    }\n  }\n\n  _createUUID() {\n    const dateTime = new Date().getTime();\n    const uuid = 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = (dateTime + Math.random() * 16) % 16 | 0;\n      return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  typeOf(obj) {\n    return Object.prototype.toString.call(obj)\n      .slice(8, -1);\n  }\n}\n\nclass AjaxResult {\n\n  constructor() {\n\n\n    this._successFunc = () => {\n    };\n    this._failFunc = () => {\n    };\n  }\n\n  done(callbackFunc) {\n    this._successFunc = callbackFunc;\n    return this;\n  }\n\n  fail(callbackFunc) {\n    this._failFunc = callbackFunc;\n    return this;\n  }\n\n  _success(successResult) {\n    if (this._successFunc) {\n      this._successFunc(successResult.data, successResult.response);\n    }\n\n  }\n\n  _fail(errResult) {\n    if (this._failFunc) {\n      this._failFunc(errResult.data, errResult.response, errResult.cause, errResult.err);\n    }\n  }\n\n}\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAN,CAAkB;EAEvBC,WAAW,CAACC,GAAD,EAAM;IACf,KAAKA,GAAL,GAAWA,GAAG,IAAI,EAAlB;EACD;;EAEDC,QAAQ,CAACC,OAAD,EAAU;IAEhBA,OAAO,CAACC,IAAR,GAAe,KAAf;IACA,KAAKC,IAAL,CAAUF,OAAV;EACD;;EAEDG,SAAS,CAACH,OAAD,EAAU;IACjBA,OAAO,CAACC,IAAR,GAAe,MAAf;IACA,KAAKC,IAAL,CAAUF,OAAV;EACD;;EAEQ,MAAHI,GAAG,CAACJ,OAAD,EAAU;IACjBA,OAAO,CAACC,IAAR,GAAe,KAAf;;IAEA,IAAID,OAAO,CAACK,WAAR,KAAwB,kBAA5B,EAAgD;MAC9C,IAAI,KAAKC,MAAL,CAAYN,OAAO,CAACO,IAApB,MAA8B,QAAlC,EAA4C,CAE3C,CAFD,MAEO;QACL,MAAMC,GAAG,GAAGR,OAAO,CAACO,IAApB;QACAP,OAAO,CAACO,IAAR,GAAeE,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAf;MACD;IACF;;IAED,OAAO,IAAIG,OAAJ,CAAaC,OAAD,IAAa;MAC9BZ,OAAO,CAACa,OAAR,GAAkB,CAACN,IAAD,EAAOO,QAAP,KAAoB;QACpCF,OAAO,CAAC;UAAEC,OAAO,EAAE,IAAX;UAAiBN,IAAI,EAAEA,IAAvB;UAA6BO;QAA7B,CAAD,CAAP;MACD,CAFD;;MAGAd,OAAO,CAACe,KAAR,GAAgB,CAACR,IAAD,EAAOO,QAAP,EAAiBE,KAAjB,EAAwBC,GAAxB,KAAgC;QAC9CL,OAAO,CAAC;UACNC,OAAO,EAAE,KADH;UAENN,IAFM;UAGNS,KAAK,EAAEA,KAHD;UAIND,KAAK,EAAEE,GAJD;UAKNH,QAAQ,EAAEA;QALJ,CAAD,CAAP;MAOD,CARD;;MASAd,OAAO,CAACkB,OAAR,GAAkB,CAACX,IAAD,EAAOO,QAAP,EAAiBE,KAAjB,EAAwBC,GAAxB,KAAgC;QAChDL,OAAO,CAAC;UACNC,OAAO,EAAE,KADH;UAENN,IAFM;UAGNS,KAAK,EAAEA,KAHD;UAIND,KAAK,EAAEE,GAJD;UAKNH,QAAQ,EAAEA;QALJ,CAAD,CAAP;MAOD,CARD;;MASA,KAAKZ,IAAL,CAAUF,OAAV;IACD,CAvBM,CAAP;EAyBD;;EAES,MAAJmB,IAAI,CAACnB,OAAD,EAAU;IAClBA,OAAO,CAACC,IAAR,GAAe,MAAf;;IAEA,IAAID,OAAO,CAACK,WAAR,KAAwB,kBAA5B,EAAgD;MAC9C,IAAI,KAAKC,MAAL,CAAYN,OAAO,CAACO,IAApB,MAA8B,QAAlC,EAA4C,CAE3C,CAFD,MAEO;QACL,MAAMC,GAAG,GAAGR,OAAO,CAACO,IAApB;QACAP,OAAO,CAACO,IAAR,GAAeE,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAf;MACD;IACF;;IAED,OAAO,IAAIG,OAAJ,CAAaC,OAAD,IAAa;MAC9BZ,OAAO,CAACa,OAAR,GAAkB,CAACN,IAAD,EAAOO,QAAP,KAAoB;QACpCF,OAAO,CAAC;UACNC,OAAO,EAAE,IADH;UAENN,IAAI,EAAEA,IAFA;UAGNO;QAHM,CAAD,CAAP;MAKD,CAND;;MAOAd,OAAO,CAACe,KAAR,GAAgB,CAACR,IAAD,EAAOO,QAAP,EAAiBE,KAAjB,EAAwBC,GAAxB,KAAgC;QAC9CL,OAAO,CAAC;UACNC,OAAO,EAAE,KADH;UAENN,IAFM;UAGNS,KAAK,EAAEA,KAHD;UAIND,KAAK,EAAEE,GAJD;UAKNH,QAAQ,EAAEA;QALJ,CAAD,CAAP;MAOD,CARD;;MASAd,OAAO,CAACkB,OAAR,GAAkB,CAACX,IAAD,EAAOO,QAAP,EAAiBE,KAAjB,EAAwBC,GAAxB,KAAgC;QAChDL,OAAO,CAAC;UACNC,OAAO,EAAE,KADH;UAENN,IAFM;UAGNS,KAAK,EAAEA,KAHD;UAIND,KAAK,EAAEE,GAJD;UAKNH,QAAQ,EAAEA;QALJ,CAAD,CAAP;MAOD,CARD;;MASA,KAAKZ,IAAL,CAAUF,OAAV;IACD,CA3BM,CAAP;EA8BD;;EAEDE,IAAI,CAACF,OAAD,EAAU;IAEZ,MAAMoB,GAAG,GAAG,KAAKC,UAAL,CAAgBrB,OAAhB,CAAZ;;IACA,MAAMsB,MAAM,GAAGtB,OAAO,CAACC,IAAvB;IACA,MAAMsB,QAAQ,GAAGvB,OAAO,CAACuB,QAAzB;IACA,MAAMhB,IAAI,GAAGP,OAAO,CAACO,IAArB;IACA,MAAMiB,OAAO,GAAGxB,OAAO,CAACwB,OAAxB;IACA,MAAMnB,WAAW,GAAGL,OAAO,CAACK,WAA5B;IAGA,IAAIoB,QAAQ,GAAG,IAAf;;IAEA,IAAI,CAACL,GAAL,EAAU;MACR,MAAMM,KAAK,CAAC,qBAAD,CAAX;IACD;;IACD,IAAIJ,MAAM,IAAIA,MAAM,CAACK,WAAP,OAAyB,MAAvC,EAA+C;MAE7CF,QAAQ,GAAGlB,IAAX,CAF6C,CAE7B;;MAEhB,IAAIgB,QAAQ,KAAK,OAAjB,EAA0B;QACxB;QACA,MAAM,IAAIG,KAAJ,CAAW;AACzB,iEADc,CAAN;MAED;IACF;;IAED,IAAIF,OAAO,IAAID,QAAQ,KAAK,OAA5B,EAAqC;MACnC;MACA,MAAM,IAAIG,KAAJ,CAAW;AACvB,yDADY,CAAN;IAED;;IAED,MAAME,QAAQ,GAAG;MACfR,GAAG,EAAEA,GADU;MAEfE,MAAM,EAAEA,MAFO;MAGfO,IAAI,EAAEJ,QAHS;MAIfpB,WAAW,EAAEA;IAJE,CAAjB;;IAOA,IAAImB,OAAJ,EAAa;MACXI,QAAQ,CAACJ,OAAT,GAAmBA,OAAnB;IACD;;IAGD,IAAID,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,MAAxC,EAAgD;MAC9C,MAAMO,WAAW,GAAG,KAAKC,WAAL,CAAiBH,QAAjB,EAA2BL,QAA3B,EAAqCvB,OAArC,CAApB;;MACA,OAAO8B,WAAP;IACD,CAHD,MAGO,IAAIP,QAAQ,KAAK,OAAjB,EAA0B;MAC/B,MAAMO,WAAW,GAAG,KAAKE,YAAL,CAAkBJ,QAAlB,EAA4B5B,OAA5B,CAApB;;MACA,OAAO8B,WAAP;IACD,CAHM,MAGA;MACL,MAAM,IAAIJ,KAAJ,CAAW,yBAAwBH,QAAS,qCAA5C,CAAN;IACD;EACF;;EAEDU,cAAc,CAACL,QAAD,EAAW5B,OAAX,EAAoB;IAGhC,MAAMsB,MAAM,GAAGM,QAAQ,CAACN,MAAT,CAAgBY,WAAhB,EAAf;IACA,MAAMC,UAAU,GAAG;MACjBb,MAAM,EAAEA,MADS;MAEjBc,IAAI,EAAE,MAFW;MAGjBC,KAAK,EAAE,UAHU;MAIjBb,OAAO,EAAE,CACP;QACA;MAFO,CAJQ,CAQjB;MACA;;IATiB,CAAnB;;IAYA,IAAII,QAAQ,CAACvB,WAAb,EAA0B;MACxB8B,UAAU,CAACX,OAAX,CAAmB,cAAnB,IAAqCI,QAAQ,CAACvB,WAA9C;IAED,CAHD,MAGO;MACL,IAAIiB,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,KAApC,EAA2C;QACzC,MAAMI,KAAK,CAAC,6BAAD,CAAX;MACD;IACF;;IAED,IAAI1B,OAAO,CAACsC,SAAZ,EAAuB;MACrB,MAAM;QAAEA;MAAF,IAAgBtC,OAAtB;;MACA,IAAIsC,SAAS,CAACC,eAAV,KAA8B,IAAlC,EAAwC;QACtCJ,UAAU,CAACK,WAAX,GAAyB,SAAzB;MACD;IACF,CA9B+B,CA+BhC;;;IACA,IAAIZ,QAAQ,CAACY,WAAb,EAA0B;MACxBL,UAAU,CAACK,WAAX,GAAyBZ,QAAQ,CAACY,WAAlC;IACD,CAlC+B,CAoChC;;;IACA,IAAIZ,QAAQ,CAACJ,OAAb,EAAsB;MACpB,KAAK,MAAMiB,GAAX,IAAkBb,QAAQ,CAACJ,OAA3B,EAAoC;QAClC,MAAMkB,KAAK,GAAGd,QAAQ,CAACJ,OAAT,CAAiBiB,GAAjB,CAAd;QACAN,UAAU,CAACX,OAAX,CAAmBiB,GAAnB,IAA0BC,KAA1B;MACD;IACF,CA1C+B,CA4ChC;;;IACA,IAAId,QAAQ,CAACC,IAAb,EAAmB;MAEjB,IAAID,QAAQ,CAACvB,WAAT,CAAqBsC,UAArB,CAAgC,mCAAhC,CAAJ,EAA0E;QAExE,MAAMC,YAAY,GAAIC,QAAD,IAAc;UACjC,MAAMC,MAAM,GAAG,EAAf;;UACA,KAAK,MAAMC,IAAX,IAAmBF,QAAnB,EAA6B;YAC3B,MAAMH,KAAK,GAAGG,QAAQ,CAACE,IAAD,CAAtB;YACA,MAAMC,KAAK,GAAGC,kBAAkB,CAACF,IAAD,CAAlB,GAA2B,GAA3B,GAAiCE,kBAAkB,CAACP,KAAD,CAAjE;YACAI,MAAM,CAACI,IAAP,CAAYF,KAAZ;UACD;;UACD,OAAOF,MAAM,CAACK,IAAP,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,MAAzB,EAAiC,GAAjC,CAAP,CAPiC,CAOY;QAC9C,CARD;;QAUA,MAAMP,QAAQ,GAAGjB,QAAQ,CAACC,IAA1B;QACA,MAAMwB,kBAAkB,GAAGT,YAAY,CAACC,QAAD,CAAvC;QACAV,UAAU,CAACN,IAAX,GAAkBwB,kBAAlB;MACD,CAfD,MAeO;QACLlB,UAAU,CAACN,IAAX,GAAkBD,QAAQ,CAACC,IAA3B;MACD;IAGF;;IACD,OAAOM,UAAP;EACD;;EAEDJ,WAAW,CAACH,QAAD,EAAWL,QAAX,EAAqBvB,OAArB,EAA8B;IACvC,MAAMsD,IAAI,GAAG,IAAb;IACA,MAAMxB,WAAW,GAAG,IAAIyB,UAAJ,EAApB;;IACA,MAAMpB,UAAU,GAAG,KAAKF,cAAL,CAAoBL,QAApB,EAA8B5B,OAA9B,CAAnB;;IAEA,MAAMwD,OAAO,GAAGF,IAAI,CAACxD,GAAL,CAAS2D,KAAT,IAAkBA,KAAlC;IAEA,MAAMC,YAAY,GAAGF,OAAO,CAAC5B,QAAQ,CAACR,GAAV,EAAee,UAAf,CAA5B;;IAEA,MAAMwB,SAAS,GAAG,CAACC,OAAD,EAAU5D,OAAV,KAAsB;MAEtC,OAAO,IAAIW,OAAJ,CAAY,CAACC,OAAD,EAAUiD,MAAV,KAAqB;QAEtC;QACA,IAAI7D,OAAO,IAAIA,OAAO,CAAC8D,aAAvB,EAAsC;UACpC;UACAC,UAAU,CAAC,MAAM;YACfF,MAAM,CAAC;cAAEtD,IAAI,EAAE,IAAR;cAAcS,KAAK,EAAG,WAAUhB,OAAO,CAAC8D,aAAc,YAAtD;cAAmEhD,QAAQ,EAAE;YAA7E,CAAD,CAAN;UACD,CAFS,EAEPd,OAAO,CAAC8D,aAFD,CAAV;QAGD,CARqC,CAUtC;;;QACAF,OAAO,CAACI,IAAR,CACGlD,QAAD,IAAc;UACZ,IAAI,CAACA,QAAQ,CAACmD,EAAd,EAAkB;YAChB;YACA,IAAI1C,QAAQ,KAAK,MAAjB,EAAyB;cACvBT,QAAQ,CAACoD,IAAT,GACGF,IADH,CACSG,QAAD,IAAc;gBAClBN,MAAM,CAAC;kBAAEtD,IAAI,EAAE4D,QAAR;kBAAkBnD,KAAK,EAAG,2BAA0BF,QAAQ,CAACsD,MAAO,EAApE;kBAAuEtD;gBAAvE,CAAD,CAAN;cACD,CAHH,EAIGuD,KAJH,CAIUpD,GAAD,IAAS;gBACd;gBACAH,QAAQ,CAACwD,IAAT,GACGN,IADH,CACSO,QAAD,IAAc;kBAClBV,MAAM,CAAC;oBAAEtD,IAAI,EAAEgE,QAAR;oBAAkBvD,KAAK,EAAG,2BAA0BF,QAAQ,CAACsD,MAAO,EAApE;oBAAuEtD;kBAAvE,CAAD,CAAN;gBACD,CAHH,EAIGuD,KAJH,CAIUpD,GAAD,IAAS;kBACd4C,MAAM,CAAC;oBAAEtD,IAAI,EAAE,IAAR;oBAAcS,KAAK,EAAG,gBAAeC,GAAI,EAAzC;oBAA4CH;kBAA5C,CAAD,CAAN;gBACD,CANH,EAFc,CASd;cACD,CAdH;YAgBD,CAjBD,MAiBO,IAAIS,QAAQ,KAAK,MAAjB,EAAyB;cAC9BT,QAAQ,CAACwD,IAAT,GACGN,IADH,CACSO,QAAD,IAAc;gBAClBV,MAAM,CAAC;kBAAEtD,IAAI,EAAEgE,QAAR;kBAAkBvD,KAAK,EAAG,2BAA0BF,QAAQ,CAACsD,MAAO,EAApE;kBAAuEtD;gBAAvE,CAAD,CAAN;cACD,CAHH,EAIGuD,KAJH,CAIUpD,GAAD,IAAS;gBACd4C,MAAM,CAAC;kBAAEtD,IAAI,EAAE,IAAR;kBAAcS,KAAK,EAAG,gBAAeC,GAAI,EAAzC;kBAA4CH;gBAA5C,CAAD,CAAN;cACD,CANH;YAOD;UAEF,CA7BD,MA6BO;YACL;YACA,IAAIS,QAAQ,KAAK,MAAjB,EAAyB;cACvBT,QAAQ,CAACoD,IAAT,GACGF,IADH,CACSG,QAAD,IAAc;gBAClBvD,OAAO,CAAC;kBAAEL,IAAI,EAAE4D,QAAR;kBAAkBrD;gBAAlB,CAAD,CAAP;cACD,CAHH,EAIGuD,KAJH,CAIUpD,GAAD,IAAS;gBACd4C,MAAM,CAAC;kBAAEtD,IAAI,EAAE,IAAR;kBAAcS,KAAK,EAAG,gBAAeC,GAAI,EAAzC;kBAA4CH;gBAA5C,CAAD,CAAN;cACD,CANH;YASD,CAVD,MAUO,IAAIS,QAAQ,KAAK,MAAjB,EAAyB;cAC9BT,QAAQ,CAACwD,IAAT,GACGN,IADH,CACSO,QAAD,IAAc;gBAClB;gBACA3D,OAAO,CAAC;kBAAEL,IAAI,EAAEgE,QAAR;kBAAkBzD;gBAAlB,CAAD,CAAP,CAFkB,CAGlB;cACD,CALH,EAMGuD,KANH,CAMUpD,GAAD,IAAS;gBACd4C,MAAM,CAAC;kBAAEtD,IAAI,EAAE,IAAR;kBAAcS,KAAK,EAAG,gBAAeC,GAAI,EAAzC;kBAA4CH;gBAA5C,CAAD,CAAN;cACD,CARH;YASD;UACF;QACF,CAvDH,EAwDGuD,KAxDH,CAwDUpD,GAAD,IAAS;UACduD,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBxD,GAAnB;UACA4C,MAAM,CAAC;YAAEtD,IAAI,EAAE,IAAR;YAAcS,KAAK,EAAG,eAAtB;YAAsCF,QAAQ,EAAE,IAAhD;YAAsDG;UAAtD,CAAD,CAAN;QACD,CA3DH;MA4DD,CAvEM,CAAP;IAwED,CA1ED;;IA4EA0C,SAAS,CAACD,YAAD,EAAe1D,OAAf,CAAT,CACGgE,IADH,CAEKU,MAAD,IAAY;MACV;MACA;MACA5C,WAAW,CAAC6C,QAAZ,CAAqBD,MAArB;;MACA,IAAI1E,OAAO,IAAIA,OAAO,CAACa,OAAvB,EAAgC;QAC9Bb,OAAO,CAACa,OAAR,CAAgB6D,MAAM,CAACnE,IAAvB,EAA6BmE,MAAM,CAAC5D,QAApC,EAD8B,CACgB;MAC/C;IACF,CATL,EAUGuD,KAVH,CAUSO,SAAS,IAAI;MAElB;MACA;MACA;MACA9C,WAAW,CAAC+C,KAAZ,CAAkBD,SAAlB;;MAEA,IAAIA,SAAS,CAAC5D,KAAV,KAAoB,SAAxB,EAAmC;QAEjC,IAAIhB,OAAO,IAAIA,OAAO,CAACkB,OAAvB,EAAgC;UAC9BlB,OAAO,CAACkB,OAAR,CAAgB0D,SAAS,CAACrE,IAA1B,EAAgCqE,SAAS,CAAC9D,QAA1C,EAAoD8D,SAAS,CAAC5D,KAA9D,EAAqE4D,SAAS,CAAC3D,GAA/E;QACD;MACF,CALD,MAKO;QACL,IAAIjB,OAAO,IAAIA,OAAO,CAACe,KAAvB,EAA8B;UAC5B;UACAf,OAAO,CAACe,KAAR,CAAc6D,SAAS,CAACrE,IAAxB,EAA8BqE,SAAS,CAAC9D,QAAxC,EAAkD8D,SAAS,CAAC5D,KAA5D,EAAmE4D,SAAS,CAAC3D,GAA7E;QAED;MACF;IACF,CA7BH;IAgCA,OAAOa,WAAP;EAED;;EAEDE,YAAY,CAACJ,QAAD,EAAW5B,OAAX,EAAoB;IAE9B,MAAM8B,WAAW,GAAG,IAAIyB,UAAJ,EAApB;IACA,MAAMuB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAlB;IACA,MAAMC,gBAAgB,GAAI,eAAc,KAAKC,WAAL,EAAmB,EAA3D;IAEA,IAAIC,GAAG,GAAGvD,QAAQ,CAACR,GAAnB;;IACA,IAAI+D,GAAG,CAACC,OAAJ,CAAY,GAAZ,KAAoB,CAAxB,EAA2B;MACzBD,GAAG,IAAK,aAAYF,gBAAiB,EAArC;IACD,CAFD,MAEO;MACLE,GAAG,IAAK,aAAYF,gBAAiB,EAArC;IACD;;IACDH,SAAS,CAACK,GAAV,GAAgBA,GAAhB;IACAL,SAAS,CAACO,gBAAV,CAA2B,OAA3B,EAAqCC,QAAD,IAAc;MAChDxD,WAAW,CAAC+C,KAAZ,CAAkBS,QAAlB;;MACA,IAAItF,OAAO,IAAIA,OAAO,CAACe,KAAvB,EAA8B;QAC5Bf,OAAO,CAACe,KAAR,CAAcuE,QAAd,EAAwB,IAAxB;MACD;IACF,CALD,EAb8B,CAoB9B;;IACAC,MAAM,CAACN,gBAAD,CAAN,GAA4BO,GAAD,IAAS;MAClC,OAAOD,MAAM,CAACN,gBAAD,CAAb;;MAEAnD,WAAW,CAAC6C,QAAZ,CAAqB;QAAEpE,IAAI,EAAEiF,GAAR;QAAa1E,QAAQ,EAAE;MAAvB,CAArB;;MACA,IAAId,OAAO,IAAIA,OAAO,CAACa,OAAvB,EAAgC;QAE9Bb,OAAO,CAACa,OAAR,CAAgB2E,GAAhB,EAAqB,IAArB;MACD;IACF,CARD;;IAUA,MAAMC,SAAS,GAAGV,QAAQ,CAACW,oBAAT,CAA8B,MAA9B,IAAwCX,QAAQ,CAACW,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAxC,GAAmFX,QAAQ,CAAClD,IAA9G;IACA4D,SAAS,CAACE,WAAV,CAAsBb,SAAtB;IAEA,OAAOhD,WAAP;EAED;;EAEDT,UAAU,CAACrB,OAAD,EAAU;IAElB,IAAIA,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAa0B,WAAb,OAA+B,MAAnD,EAA2D;MACzD;MACA,OAAO3B,OAAO,CAACoB,GAAf;IACD,CAHD,MAGO,IAAIpB,OAAO,CAACC,IAAR,IAAgBD,OAAO,CAACC,IAAR,CAAa0B,WAAb,OAA+B,KAAnD,EAA0D;MAC/D;MACA,IAAIP,GAAG,GAAGpB,OAAO,CAACoB,GAAlB;;MACA,IAAIpB,OAAO,CAACO,IAAZ,EAAkB;QAEhB,MAAMqF,SAAS,GAAGnF,IAAI,CAACoF,KAAL,CAAW7F,OAAO,CAACO,IAAnB,CAAlB;QAEAa,GAAG,GAAGA,GAAG,GAAG,GAAZ;;QACA,KAAK,IAAI0E,QAAT,IAAqBC,MAAM,CAACC,IAAP,CAAYJ,SAAZ,CAArB,EAA6C;UAC3C,MAAMK,QAAQ,GAAGL,SAAS,CAACE,QAAD,CAA1B;UACA1E,GAAG,IAAK,GAAE0E,QAAS,IAAGG,QAAS,GAA/B;QACD;;QACD7E,GAAG,GAAGA,GAAG,CAAC8E,SAAJ,CAAc,CAAd,EAAiB9E,GAAG,CAAC+E,MAAJ,GAAa,CAA9B,CAAN;MACD;;MACD,OAAO/E,GAAP;IACD,CAfM,MAeA;MACL,MAAMM,KAAK,CAAE,gBAAe1B,OAAO,CAACC,IAAK,mBAA9B,CAAX;IACD;EACF;;EAEDiF,WAAW,GAAG;IACZ,MAAMkB,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAjB;IACA,MAAMC,IAAI,GAAG,uCAAuCnD,OAAvC,CAA+C,OAA/C,EAAwD,UAASoD,CAAT,EAAY;MAC/E,MAAMC,CAAC,GAAG,CAACL,QAAQ,GAAGM,IAAI,CAACC,MAAL,KAAgB,EAA5B,IAAkC,EAAlC,GAAuC,CAAjD;MACA,OAAO,CAACH,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAJ,GAAU,GAA3B,EAAiCG,QAAjC,CAA0C,EAA1C,CAAP;IACD,CAHY,CAAb;IAIA,OAAOL,IAAP;EACD;;EAEDjG,MAAM,CAACE,GAAD,EAAM;IACV,OAAOuF,MAAM,CAACc,SAAP,CAAiBD,QAAjB,CAA0BE,IAA1B,CAA+BtG,GAA/B,EACJuG,KADI,CACE,CADF,EACK,CAAC,CADN,CAAP;EAED;;AAtasB;;AAyazB,MAAMxD,UAAN,CAAiB;EAEf1D,WAAW,GAAG;IAGZ,KAAKmH,YAAL,GAAoB,MAAM,CACzB,CADD;;IAEA,KAAKC,SAAL,GAAiB,MAAM,CACtB,CADD;EAED;;EAEDC,IAAI,CAACC,YAAD,EAAe;IACjB,KAAKH,YAAL,GAAoBG,YAApB;IACA,OAAO,IAAP;EACD;;EAEDC,IAAI,CAACD,YAAD,EAAe;IACjB,KAAKF,SAAL,GAAiBE,YAAjB;IACA,OAAO,IAAP;EACD;;EAEDxC,QAAQ,CAAC0C,aAAD,EAAgB;IACtB,IAAI,KAAKL,YAAT,EAAuB;MACrB,KAAKA,YAAL,CAAkBK,aAAa,CAAC9G,IAAhC,EAAsC8G,aAAa,CAACvG,QAApD;IACD;EAEF;;EAED+D,KAAK,CAACD,SAAD,EAAY;IACf,IAAI,KAAKqC,SAAT,EAAoB;MAClB,KAAKA,SAAL,CAAerC,SAAS,CAACrE,IAAzB,EAA+BqE,SAAS,CAAC9D,QAAzC,EAAmD8D,SAAS,CAAC5D,KAA7D,EAAoE4D,SAAS,CAAC3D,GAA9E;IACD;EACF;;AAhCc"},"metadata":{},"sourceType":"module"}