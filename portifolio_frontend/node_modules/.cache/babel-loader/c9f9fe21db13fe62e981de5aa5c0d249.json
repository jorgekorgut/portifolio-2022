{"ast":null,"code":"import _regeneratorRuntime from \"/home/toby2/Desktop/Portifolio/portifolio_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/toby2/Desktop/Portifolio/portifolio_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/toby2/Desktop/Portifolio/portifolio_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/toby2/Desktop/Portifolio/portifolio_frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\n * AjaxClient2\n * ajax2 with fetch api\n * MIT License\n *\n * @author Tom Misawa (riversun.org@gmail.com,https://github.com/riversun)\n */\nexport var AjaxClient2 = /*#__PURE__*/function () {\n  function AjaxClient2(opt) {\n    _classCallCheck(this, AjaxClient2);\n\n    this.opt = opt || {};\n  }\n\n  _createClass(AjaxClient2, [{\n    key: \"getAsync\",\n    value: function getAsync(options) {\n      options.type = 'get';\n      this.ajax(options);\n    }\n  }, {\n    key: \"postAsync\",\n    value: function postAsync(options) {\n      options.type = 'post';\n      this.ajax(options);\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n        var _this = this;\n\n        var obj;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options.type = 'get';\n\n                if (options.contentType === 'application/json') {\n                  if (this.typeOf(options.data) === 'String') {} else {\n                    obj = options.data;\n                    options.data = JSON.stringify(obj);\n                  }\n                }\n\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  options.success = function (data, response) {\n                    resolve({\n                      success: true,\n                      data: data,\n                      response: response\n                    });\n                  };\n\n                  options.error = function (data, response, cause, err) {\n                    resolve({\n                      success: false,\n                      data: data,\n                      cause: cause,\n                      error: err,\n                      response: response\n                    });\n                  };\n\n                  options.timeout = function (data, response, cause, err) {\n                    resolve({\n                      success: false,\n                      data: data,\n                      cause: cause,\n                      error: err,\n                      response: response\n                    });\n                  };\n\n                  _this.ajax(options);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"post\",\n    value: function () {\n      var _post = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(options) {\n        var _this2 = this;\n\n        var obj;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options.type = 'post';\n\n                if (options.contentType === 'application/json') {\n                  if (this.typeOf(options.data) === 'String') {} else {\n                    obj = options.data;\n                    options.data = JSON.stringify(obj);\n                  }\n                }\n\n                return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                  options.success = function (data, response) {\n                    resolve({\n                      success: true,\n                      data: data,\n                      response: response\n                    });\n                  };\n\n                  options.error = function (data, response, cause, err) {\n                    resolve({\n                      success: false,\n                      data: data,\n                      cause: cause,\n                      error: err,\n                      response: response\n                    });\n                  };\n\n                  options.timeout = function (data, response, cause, err) {\n                    resolve({\n                      success: false,\n                      data: data,\n                      cause: cause,\n                      error: err,\n                      response: response\n                    });\n                  };\n\n                  _this2.ajax(options);\n                }));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function post(_x2) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"ajax\",\n    value: function ajax(options) {\n      var url = this._createUrl(options);\n\n      var method = options.type;\n      var dataType = options.dataType;\n      var data = options.data;\n      var headers = options.headers;\n      var contentType = options.contentType;\n      var postBody = null;\n\n      if (!url) {\n        throw Error('Please specify url.');\n      }\n\n      if (method && method.toLowerCase() === 'post') {\n        postBody = data; //JSON.stringify(data);\n\n        if (dataType === 'jsonp') {\n          //POST and jsonp specified\n          throw new Error(\"type:'POST' and 'dataType:jsonp' are specified together.\\n                'POST' and 'jsonp' can not be specified together\");\n        }\n      }\n\n      if (headers && dataType === 'jsonp') {\n        //http-headers and jsonp specified\n        throw new Error(\"'headers' and 'dataType:jsonp' can not be specified together.\\n           Http headers cannot be sent when using jsonp.\");\n      }\n\n      var reqParam = {\n        url: url,\n        method: method,\n        body: postBody,\n        contentType: contentType\n      };\n\n      if (headers) {\n        reqParam.headers = headers;\n      }\n\n      if (dataType === 'json' || dataType === 'text') {\n        var asyncResult = this._handleData(reqParam, dataType, options);\n\n        return asyncResult;\n      } else if (dataType === 'jsonp') {\n        var _asyncResult = this._handleJsonp(reqParam, options);\n\n        return _asyncResult;\n      } else {\n        throw new Error(\"Please check dataType:\".concat(dataType, \" dataType must be 'json' or 'jsonp'\"));\n      }\n    }\n  }, {\n    key: \"_getFetchParam\",\n    value: function _getFetchParam(reqParam, options) {\n      var method = reqParam.method.toUpperCase();\n      var fetchParam = {\n        method: method,\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {//'Accept': 'application/json',\n          //'Content-Type': 'application/json'\n        } //credentials:null,// 'include',\n        //referrer: 'no-referrer',\n\n      };\n\n      if (reqParam.contentType) {\n        fetchParam.headers['Content-Type'] = reqParam.contentType;\n      } else {\n        if (method === 'POST' || method === 'PUT') {\n          throw Error('Please specify contentType.');\n        }\n      }\n\n      if (options.xhrFields) {\n        var xhrFields = options.xhrFields;\n\n        if (xhrFields.withCredentials === true) {\n          fetchParam.credentials = 'include';\n        }\n      } //populate credentials\n\n\n      if (reqParam.credentials) {\n        fetchParam.credentials = reqParam.credentials;\n      } //populate headers\n\n\n      if (reqParam.headers) {\n        for (var key in reqParam.headers) {\n          var value = reqParam.headers[key];\n          fetchParam.headers[key] = value;\n        }\n      } //populate body\n\n\n      if (reqParam.body) {\n        if (reqParam.contentType.startsWith('application/x-www-form-urlencoded')) {\n          var fnEncodeForm = function fnEncodeForm(formData) {\n            var params = [];\n\n            for (var name in formData) {\n              var _value = formData[name];\n              var param = encodeURIComponent(name) + '=' + encodeURIComponent(_value);\n              params.push(param);\n            }\n\n            return params.join('&').replace(/%20/g, '+'); // encoded space(=%20) to '+'\n          };\n\n          var formData = reqParam.body;\n          var paramsFromFormData = fnEncodeForm(formData);\n          fetchParam.body = paramsFromFormData;\n        } else {\n          fetchParam.body = reqParam.body;\n        }\n      }\n\n      return fetchParam;\n    }\n  }, {\n    key: \"_handleData\",\n    value: function _handleData(reqParam, dataType, options) {\n      var self = this;\n      var asyncResult = new AjaxResult();\n\n      var fetchParam = this._getFetchParam(reqParam, options);\n\n      var fnFetch = self.opt.fetch || fetch;\n      var fetchPromise = fnFetch(reqParam.url, fetchParam);\n\n      var fnTimeout = function fnTimeout(promise, options) {\n        return new Promise(function (resolve, reject) {\n          //(1)タイムアウトのsetTimeと (2) fetchPromiseを同時実行\n          if (options && options.timeoutMillis) {\n            // (1)\n            setTimeout(function () {\n              reject({\n                data: null,\n                cause: \"timeout,\".concat(options.timeoutMillis, \"ms elapsed\"),\n                response: null\n              });\n            }, options.timeoutMillis);\n          } // (2)\n\n\n          promise.then(function (response) {\n            if (!response.ok) {\n              // - !response.okの場合(status が 200-299 の範囲外の場合)\n              if (dataType === 'json') {\n                response.json().then(function (jsonData) {\n                  reject({\n                    data: jsonData,\n                    cause: \"server error,statusCode:\".concat(response.status),\n                    response: response\n                  });\n                }).catch(function (err) {\n                  // json parse error の場合は text　でとりなおす\n                  response.text().then(function (textData) {\n                    reject({\n                      data: textData,\n                      cause: \"server error,statusCode:\".concat(response.status),\n                      response: response\n                    });\n                  }).catch(function (err) {\n                    reject({\n                      data: null,\n                      cause: \"client error,\".concat(err),\n                      response: response\n                    });\n                  }); // reject({ data: null, cause: `client error,${err}`, response });\n                });\n              } else if (dataType === 'text') {\n                response.text().then(function (textData) {\n                  reject({\n                    data: textData,\n                    cause: \"server error,statusCode:\".concat(response.status),\n                    response: response\n                  });\n                }).catch(function (err) {\n                  reject({\n                    data: null,\n                    cause: \"client error,\".concat(err),\n                    response: response\n                  });\n                });\n              }\n            } else {\n              // - response.ok の場合(status が 200-299 の範囲内の場合)\n              if (dataType === 'json') {\n                response.json().then(function (jsonData) {\n                  resolve({\n                    data: jsonData,\n                    response: response\n                  });\n                }).catch(function (err) {\n                  reject({\n                    data: null,\n                    cause: \"client error,\".concat(err),\n                    response: response\n                  });\n                });\n              } else if (dataType === 'text') {\n                response.text().then(function (textData) {\n                  //return Promise.resolve({ data: jsonData, response });\n                  resolve({\n                    data: textData,\n                    response: response\n                  }); // return {data:jsonData,response}; // is also ok\n                }).catch(function (err) {\n                  reject({\n                    data: null,\n                    cause: \"client error,\".concat(err),\n                    response: response\n                  });\n                });\n              }\n            }\n          }).catch(function (err) {\n            console.log(\"エラー\", err);\n            reject({\n              data: null,\n              cause: \"network error\",\n              response: null,\n              err: err\n            });\n          });\n        });\n      };\n\n      fnTimeout(fetchPromise, options).then(function (result) {\n        // - resolve を受け取った\n        //asyncResult._success(result.data, result.response);\n        asyncResult._success(result);\n\n        if (options && options.success) {\n          options.success(result.data, result.response); //data.data);\n        }\n      }).catch(function (errResult) {\n        // - reject を受け取る\n        //const errorObj = errResult;\n        //asyncResult._fail(errResult.data, errResult.response,errResult.cause,errResult.err);// todo なにこれ\n        asyncResult._fail(errResult);\n\n        if (errResult.cause === 'timeout') {\n          if (options && options.timeout) {\n            options.timeout(errResult.data, errResult.response, errResult.cause, errResult.err);\n          }\n        } else {\n          if (options && options.error) {\n            //options.error(errResult, errResult.response);\n            options.error(errResult.data, errResult.response, errResult.cause, errResult.err);\n          }\n        }\n      });\n      return asyncResult;\n    }\n  }, {\n    key: \"_handleJsonp\",\n    value: function _handleJsonp(reqParam, options) {\n      var asyncResult = new AjaxResult();\n      var scriptEle = document.createElement('script');\n      var callbackFuncName = \"ajaxclient2_\".concat(this._createUUID());\n      var src = reqParam.url;\n\n      if (src.indexOf('?') >= 0) {\n        src += \"&callback=\".concat(callbackFuncName);\n      } else {\n        src += \"?callback=\".concat(callbackFuncName);\n      }\n\n      scriptEle.src = src;\n      scriptEle.addEventListener('error', function (errorObj) {\n        asyncResult._fail(errorObj);\n\n        if (options && options.error) {\n          options.error(errorObj, null);\n        }\n      }); //global object\n\n      window[callbackFuncName] = function (res) {\n        delete window[callbackFuncName];\n\n        asyncResult._success({\n          data: res,\n          response: null\n        });\n\n        if (options && options.success) {\n          options.success(res, null);\n        }\n      };\n\n      var parentEle = document.getElementsByTagName('head') ? document.getElementsByTagName('head')[0] : document.body;\n      parentEle.appendChild(scriptEle);\n      return asyncResult;\n    }\n  }, {\n    key: \"_createUrl\",\n    value: function _createUrl(options) {\n      if (options.type && options.type.toLowerCase() === 'post') {\n        //POST\n        return options.url;\n      } else if (options.type && options.type.toLowerCase() === 'get') {\n        //GET\n        var url = options.url;\n\n        if (options.data) {\n          var paramData = JSON.parse(options.data);\n          url = url + '?';\n\n          for (var _i = 0, _Object$keys = Object.keys(paramData); _i < _Object$keys.length; _i++) {\n            var paramKey = _Object$keys[_i];\n            var paramVal = paramData[paramKey];\n            url += \"\".concat(paramKey, \"=\").concat(paramVal, \"&\");\n          }\n\n          url = url.substring(0, url.length - 1);\n        }\n\n        return url;\n      } else {\n        throw Error(\"Invalid type \".concat(options.type, \" is not supported\"));\n      }\n    }\n  }, {\n    key: \"_createUUID\",\n    value: function _createUUID() {\n      var dateTime = new Date().getTime();\n      var uuid = 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (dateTime + Math.random() * 16) % 16 | 0;\n        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n      });\n      return uuid;\n    }\n  }, {\n    key: \"typeOf\",\n    value: function typeOf(obj) {\n      return Object.prototype.toString.call(obj).slice(8, -1);\n    }\n  }]);\n\n  return AjaxClient2;\n}();\n\nvar AjaxResult = /*#__PURE__*/function () {\n  function AjaxResult() {\n    _classCallCheck(this, AjaxResult);\n\n    this._successFunc = function () {};\n\n    this._failFunc = function () {};\n  }\n\n  _createClass(AjaxResult, [{\n    key: \"done\",\n    value: function done(callbackFunc) {\n      this._successFunc = callbackFunc;\n      return this;\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(callbackFunc) {\n      this._failFunc = callbackFunc;\n      return this;\n    }\n  }, {\n    key: \"_success\",\n    value: function _success(successResult) {\n      if (this._successFunc) {\n        this._successFunc(successResult.data, successResult.response);\n      }\n    }\n  }, {\n    key: \"_fail\",\n    value: function _fail(errResult) {\n      if (this._failFunc) {\n        this._failFunc(errResult.data, errResult.response, errResult.cause, errResult.err);\n      }\n    }\n  }]);\n\n  return AjaxResult;\n}();","map":{"version":3,"names":["AjaxClient2","opt","options","type","ajax","contentType","typeOf","data","obj","JSON","stringify","Promise","resolve","success","response","error","cause","err","timeout","url","_createUrl","method","dataType","headers","postBody","Error","toLowerCase","reqParam","body","asyncResult","_handleData","_handleJsonp","toUpperCase","fetchParam","mode","cache","xhrFields","withCredentials","credentials","key","value","startsWith","fnEncodeForm","formData","params","name","param","encodeURIComponent","push","join","replace","paramsFromFormData","self","AjaxResult","_getFetchParam","fnFetch","fetch","fetchPromise","fnTimeout","promise","reject","timeoutMillis","setTimeout","then","ok","json","jsonData","status","catch","text","textData","console","log","result","_success","errResult","_fail","scriptEle","document","createElement","callbackFuncName","_createUUID","src","indexOf","addEventListener","errorObj","window","res","parentEle","getElementsByTagName","appendChild","paramData","parse","Object","keys","paramKey","paramVal","substring","length","dateTime","Date","getTime","uuid","c","r","Math","random","toString","prototype","call","slice","_successFunc","_failFunc","callbackFunc","successResult"],"sources":["/home/toby2/Desktop/Portifolio/portifolio_frontend/node_modules/ajax-client/src/AjaxClient2.js"],"sourcesContent":["\n/**\n * AjaxClient2\n * ajax2 with fetch api\n * MIT License\n *\n * @author Tom Misawa (riversun.org@gmail.com,https://github.com/riversun)\n */\nexport class AjaxClient2 {\n\n  constructor(opt) {\n    this.opt = opt || {};\n  }\n\n  getAsync(options) {\n\n    options.type = 'get';\n    this.ajax(options);\n  }\n\n  postAsync(options) {\n    options.type = 'post';\n    this.ajax(options);\n  }\n\n  async get(options) {\n    options.type = 'get';\n\n    if (options.contentType === 'application/json') {\n      if (this.typeOf(options.data) === 'String') {\n\n      } else {\n        const obj = options.data;\n        options.data = JSON.stringify(obj);\n      }\n    }\n\n    return new Promise((resolve) => {\n      options.success = (data, response) => {\n        resolve({ success: true, data: data, response });\n      };\n      options.error = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      options.timeout = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      this.ajax(options);\n    });\n\n  }\n\n  async post(options) {\n    options.type = 'post';\n\n    if (options.contentType === 'application/json') {\n      if (this.typeOf(options.data) === 'String') {\n\n      } else {\n        const obj = options.data;\n        options.data = JSON.stringify(obj);\n      }\n    }\n\n    return new Promise((resolve) => {\n      options.success = (data, response) => {\n        resolve({\n          success: true,\n          data: data,\n          response,\n        });\n      };\n      options.error = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      options.timeout = (data, response, cause, err) => {\n        resolve({\n          success: false,\n          data,\n          cause: cause,\n          error: err,\n          response: response,\n        });\n      };\n      this.ajax(options);\n    });\n\n\n  }\n\n  ajax(options) {\n\n    const url = this._createUrl(options);\n    const method = options.type;\n    const dataType = options.dataType;\n    const data = options.data;\n    const headers = options.headers;\n    const contentType = options.contentType;\n\n\n    let postBody = null;\n\n    if (!url) {\n      throw Error('Please specify url.');\n    }\n    if (method && method.toLowerCase() === 'post') {\n\n      postBody = data;//JSON.stringify(data);\n\n      if (dataType === 'jsonp') {\n        //POST and jsonp specified\n        throw new Error(`type:'POST' and 'dataType:jsonp' are specified together.\n                'POST' and 'jsonp' can not be specified together`);\n      }\n    }\n\n    if (headers && dataType === 'jsonp') {\n      //http-headers and jsonp specified\n      throw new Error(`'headers' and 'dataType:jsonp' can not be specified together.\n           Http headers cannot be sent when using jsonp.`);\n    }\n\n    const reqParam = {\n      url: url,\n      method: method,\n      body: postBody,\n      contentType: contentType,\n    };\n\n    if (headers) {\n      reqParam.headers = headers;\n    }\n\n\n    if (dataType === 'json' || dataType === 'text') {\n      const asyncResult = this._handleData(reqParam, dataType, options);\n      return asyncResult;\n    } else if (dataType === 'jsonp') {\n      const asyncResult = this._handleJsonp(reqParam, options);\n      return asyncResult;\n    } else {\n      throw new Error(`Please check dataType:${dataType} dataType must be 'json' or 'jsonp'`);\n    }\n  }\n\n  _getFetchParam(reqParam, options) {\n\n\n    const method = reqParam.method.toUpperCase();\n    const fetchParam = {\n      method: method,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        //'Accept': 'application/json',\n        //'Content-Type': 'application/json'\n      }\n      //credentials:null,// 'include',\n      //referrer: 'no-referrer',\n    };\n\n    if (reqParam.contentType) {\n      fetchParam.headers['Content-Type'] = reqParam.contentType;\n\n    } else {\n      if (method === 'POST' || method === 'PUT') {\n        throw Error('Please specify contentType.');\n      }\n    }\n\n    if (options.xhrFields) {\n      const { xhrFields } = options;\n      if (xhrFields.withCredentials === true) {\n        fetchParam.credentials = 'include';\n      }\n    }\n    //populate credentials\n    if (reqParam.credentials) {\n      fetchParam.credentials = reqParam.credentials;\n    }\n\n    //populate headers\n    if (reqParam.headers) {\n      for (const key in reqParam.headers) {\n        const value = reqParam.headers[key];\n        fetchParam.headers[key] = value;\n      }\n    }\n\n    //populate body\n    if (reqParam.body) {\n\n      if (reqParam.contentType.startsWith('application/x-www-form-urlencoded')) {\n\n        const fnEncodeForm = (formData) => {\n          const params = [];\n          for (const name in formData) {\n            const value = formData[name];\n            const param = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n            params.push(param);\n          }\n          return params.join('&').replace(/%20/g, '+');// encoded space(=%20) to '+'\n        };\n\n        const formData = reqParam.body;\n        const paramsFromFormData = fnEncodeForm(formData);\n        fetchParam.body = paramsFromFormData;\n      } else {\n        fetchParam.body = reqParam.body;\n      }\n\n\n    }\n    return fetchParam;\n  }\n\n  _handleData(reqParam, dataType, options) {\n    const self = this;\n    const asyncResult = new AjaxResult();\n    const fetchParam = this._getFetchParam(reqParam, options);\n\n    const fnFetch = self.opt.fetch || fetch;\n\n    const fetchPromise = fnFetch(reqParam.url, fetchParam);\n\n    const fnTimeout = (promise, options) => {\n\n      return new Promise((resolve, reject) => {\n\n        //(1)タイムアウトのsetTimeと (2) fetchPromiseを同時実行\n        if (options && options.timeoutMillis) {\n          // (1)\n          setTimeout(() => {\n            reject({ data: null, cause: `timeout,${options.timeoutMillis}ms elapsed`, response: null });\n          }, options.timeoutMillis);\n        }\n\n        // (2)\n        promise.then(\n          (response) => {\n            if (!response.ok) {\n              // - !response.okの場合(status が 200-299 の範囲外の場合)\n              if (dataType === 'json') {\n                response.json()\n                  .then((jsonData) => {\n                    reject({ data: jsonData, cause: `server error,statusCode:${response.status}`, response });\n                  })\n                  .catch((err) => {\n                    // json parse error の場合は text　でとりなおす\n                    response.text()\n                      .then((textData) => {\n                        reject({ data: textData, cause: `server error,statusCode:${response.status}`, response });\n                      })\n                      .catch((err) => {\n                        reject({ data: null, cause: `client error,${err}`, response });\n                      });\n                    // reject({ data: null, cause: `client error,${err}`, response });\n                  });\n\n              } else if (dataType === 'text') {\n                response.text()\n                  .then((textData) => {\n                    reject({ data: textData, cause: `server error,statusCode:${response.status}`, response });\n                  })\n                  .catch((err) => {\n                    reject({ data: null, cause: `client error,${err}`, response });\n                  });\n              }\n\n            } else {\n              // - response.ok の場合(status が 200-299 の範囲内の場合)\n              if (dataType === 'json') {\n                response.json()\n                  .then((jsonData) => {\n                    resolve({ data: jsonData, response });\n                  })\n                  .catch((err) => {\n                    reject({ data: null, cause: `client error,${err}`, response });\n                  });\n\n\n              } else if (dataType === 'text') {\n                response.text()\n                  .then((textData) => {\n                    //return Promise.resolve({ data: jsonData, response });\n                    resolve({ data: textData, response });\n                    // return {data:jsonData,response}; // is also ok\n                  })\n                  .catch((err) => {\n                    reject({ data: null, cause: `client error,${err}`, response });\n                  });\n              }\n            }\n          })\n          .catch((err) => {\n            console.log(\"エラー\", err)\n            reject({ data: null, cause: `network error`, response: null, err });\n          });\n      });\n    };\n\n    fnTimeout(fetchPromise, options)\n      .then(\n        (result) => {\n          // - resolve を受け取った\n          //asyncResult._success(result.data, result.response);\n          asyncResult._success(result);\n          if (options && options.success) {\n            options.success(result.data, result.response);//data.data);\n          }\n        })\n      .catch(errResult => {\n\n        // - reject を受け取る\n        //const errorObj = errResult;\n        //asyncResult._fail(errResult.data, errResult.response,errResult.cause,errResult.err);// todo なにこれ\n        asyncResult._fail(errResult);\n\n        if (errResult.cause === 'timeout') {\n\n          if (options && options.timeout) {\n            options.timeout(errResult.data, errResult.response, errResult.cause, errResult.err);\n          }\n        } else {\n          if (options && options.error) {\n            //options.error(errResult, errResult.response);\n            options.error(errResult.data, errResult.response, errResult.cause, errResult.err);\n\n          }\n        }\n      });\n\n\n    return asyncResult;\n\n  }\n\n  _handleJsonp(reqParam, options) {\n\n    const asyncResult = new AjaxResult();\n    const scriptEle = document.createElement('script');\n    const callbackFuncName = `ajaxclient2_${this._createUUID()}`;\n\n    let src = reqParam.url;\n    if (src.indexOf('?') >= 0) {\n      src += `&callback=${callbackFuncName}`;\n    } else {\n      src += `?callback=${callbackFuncName}`;\n    }\n    scriptEle.src = src;\n    scriptEle.addEventListener('error', (errorObj) => {\n      asyncResult._fail(errorObj);\n      if (options && options.error) {\n        options.error(errorObj, null);\n      }\n    });\n\n    //global object\n    window[callbackFuncName] = (res) => {\n      delete window[callbackFuncName];\n\n      asyncResult._success({ data: res, response: null });\n      if (options && options.success) {\n\n        options.success(res, null);\n      }\n    };\n\n    const parentEle = document.getElementsByTagName('head') ? document.getElementsByTagName('head')[0] : document.body;\n    parentEle.appendChild(scriptEle);\n\n    return asyncResult;\n\n  }\n\n  _createUrl(options) {\n\n    if (options.type && options.type.toLowerCase() === 'post') {\n      //POST\n      return options.url;\n    } else if (options.type && options.type.toLowerCase() === 'get') {\n      //GET\n      let url = options.url;\n      if (options.data) {\n\n        const paramData = JSON.parse(options.data);\n\n        url = url + '?';\n        for (let paramKey of Object.keys(paramData)) {\n          const paramVal = paramData[paramKey];\n          url += `${paramKey}=${paramVal}&`;\n        }\n        url = url.substring(0, url.length - 1);\n      }\n      return url;\n    } else {\n      throw Error(`Invalid type ${options.type} is not supported`);\n    }\n  }\n\n  _createUUID() {\n    const dateTime = new Date().getTime();\n    const uuid = 'xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      const r = (dateTime + Math.random() * 16) % 16 | 0;\n      return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n  }\n\n  typeOf(obj) {\n    return Object.prototype.toString.call(obj)\n      .slice(8, -1);\n  }\n}\n\nclass AjaxResult {\n\n  constructor() {\n\n\n    this._successFunc = () => {\n    };\n    this._failFunc = () => {\n    };\n  }\n\n  done(callbackFunc) {\n    this._successFunc = callbackFunc;\n    return this;\n  }\n\n  fail(callbackFunc) {\n    this._failFunc = callbackFunc;\n    return this;\n  }\n\n  _success(successResult) {\n    if (this._successFunc) {\n      this._successFunc(successResult.data, successResult.response);\n    }\n\n  }\n\n  _fail(errResult) {\n    if (this._failFunc) {\n      this._failFunc(errResult.data, errResult.response, errResult.cause, errResult.err);\n    }\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}