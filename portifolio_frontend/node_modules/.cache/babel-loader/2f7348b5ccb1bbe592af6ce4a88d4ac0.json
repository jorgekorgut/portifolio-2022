{"ast":null,"code":"var _jsxFileName = \"/home/toby2/Desktop/Portifolio/portifolio_frontend/src/pages_js/experience.js\";\nimport { useState, useEffect } from 'react';\nimport { Navigation } from '../index.js';\nimport { GetData } from '../assets/js/communication.js';\nimport '../pages_css/experience.css';\nimport '../assets/css/components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction filterMapByYear(map, y) {\n  return map.filter(_ref => {\n    let {\n      attributes\n    } = _ref;\n    return attributes.Year === y;\n  });\n}\n\nfunction findEveryYear(map) {\n  let everyYear = [];\n\n  for (let element of map) {\n    if (!everyYear.includes(element.attributes.Year)) {\n      everyYear.push(element.attributes.Year);\n    }\n  }\n\n  return everyYear;\n}\n\nexport function Experience(props) {\n  let error;\n  let experiences;\n  [experiences, error] = GetData(\"api/experiences?populate=*\");\n  let everyYear = findEveryYear(experiences);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      highlight: \"experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), everyYear.map(currentYear => {\n      return filterMapByYear(experiences, currentYear).map(exp => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card_experience\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title title_experience\",\n            children: exp.attributes.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: exp.attributes.Description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, exp.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this));\n    })]\n  }, void 0, true);\n}\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["useState","useEffect","Navigation","GetData","filterMapByYear","map","y","filter","attributes","Year","findEveryYear","everyYear","element","includes","push","Experience","props","error","experiences","currentYear","exp","Title","Description","id"],"sources":["/home/toby2/Desktop/Portifolio/portifolio_frontend/src/pages_js/experience.js"],"sourcesContent":["import { useState , useEffect } from 'react';\n\nimport {Navigation} from '../index.js';\n\nimport {GetData} from '../assets/js/communication.js'\n\nimport '../pages_css/experience.css'\nimport '../assets/css/components.css'\n\nfunction filterMapByYear(map, y){\n\treturn map.filter(({attributes})=> attributes.Year === y);\n}\n\nfunction findEveryYear(map){\n\tlet everyYear = [];\n\tfor(let element of map){\n\t\tif(!everyYear.includes(element.attributes.Year)){\n\t\t\teveryYear.push(element.attributes.Year);\n\t\t}\n\t}\n\treturn everyYear;\n}\n\nexport function Experience(props){\n\n\tlet error;\n\tlet experiences;\n\t[experiences, error] = GetData(\"api/experiences?populate=*\")\n\n\tlet everyYear = findEveryYear(experiences);\n\n\treturn (<>\n\t\t\t<Navigation highlight='experience'/>\n\t\t\t{\n\t\t\t\teveryYear.map((currentYear) => {\n\t\t\t\t\treturn filterMapByYear(experiences, currentYear).map((exp)=>(\n\t\t\t\t\t\t<div key={exp.id} className=\"\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t<div className='card card_experience'>\n\t\t\t\t\t\t\t\t\t<div className='title title_experience'>{exp.attributes.Title}</div>\n\t\t\t\t\t\t\t\t\t<div className='description'>{exp.attributes.Description}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t})\n\t\t\t}\n\t       </>)\n}\n"],"mappings":";AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAqC,OAArC;AAEA,SAAQC,UAAR,QAAyB,aAAzB;AAEA,SAAQC,OAAR,QAAsB,+BAAtB;AAEA,OAAO,6BAAP;AACA,OAAO,8BAAP;;;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,CAA9B,EAAgC;EAC/B,OAAOD,GAAG,CAACE,MAAJ,CAAW;IAAA,IAAC;MAACC;IAAD,CAAD;IAAA,OAAiBA,UAAU,CAACC,IAAX,KAAoBH,CAArC;EAAA,CAAX,CAAP;AACA;;AAED,SAASI,aAAT,CAAuBL,GAAvB,EAA2B;EAC1B,IAAIM,SAAS,GAAG,EAAhB;;EACA,KAAI,IAAIC,OAAR,IAAmBP,GAAnB,EAAuB;IACtB,IAAG,CAACM,SAAS,CAACE,QAAV,CAAmBD,OAAO,CAACJ,UAAR,CAAmBC,IAAtC,CAAJ,EAAgD;MAC/CE,SAAS,CAACG,IAAV,CAAeF,OAAO,CAACJ,UAAR,CAAmBC,IAAlC;IACA;EACD;;EACD,OAAOE,SAAP;AACA;;AAED,OAAO,SAASI,UAAT,CAAoBC,KAApB,EAA0B;EAEhC,IAAIC,KAAJ;EACA,IAAIC,WAAJ;EACA,CAACA,WAAD,EAAcD,KAAd,IAAuBd,OAAO,CAAC,4BAAD,CAA9B;EAEA,IAAIQ,SAAS,GAAGD,aAAa,CAACQ,WAAD,CAA7B;EAEA,oBAAQ;IAAA,wBACN,QAAC,UAAD;MAAY,SAAS,EAAC;IAAtB;MAAA;MAAA;MAAA;IAAA,QADM,EAGLP,SAAS,CAACN,GAAV,CAAec,WAAD,IAAiB;MAC9B,OAAOf,eAAe,CAACc,WAAD,EAAcC,WAAd,CAAf,CAA0Cd,GAA1C,CAA+Ce,GAAD,iBACpD;QAAkB,SAAS,EAAC,EAA5B;QAAA,uBAEE;UAAK,SAAS,EAAC,sBAAf;UAAA,wBACC;YAAK,SAAS,EAAC,wBAAf;YAAA,UAAyCA,GAAG,CAACZ,UAAJ,CAAea;UAAxD;YAAA;YAAA;YAAA;UAAA,QADD,eAEC;YAAK,SAAS,EAAC,aAAf;YAAA,UAA8BD,GAAG,CAACZ,UAAJ,CAAec;UAA7C;YAAA;YAAA;YAAA;UAAA,QAFD;QAAA;UAAA;UAAA;UAAA;QAAA;MAFF,GAAUF,GAAG,CAACG,EAAd;QAAA;QAAA;QAAA;MAAA,QADM,CAAP;IAUA,CAXD,CAHK;EAAA,gBAAR;AAiBA;KAzBeR,U"},"metadata":{},"sourceType":"module"}